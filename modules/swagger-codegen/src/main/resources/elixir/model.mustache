{{#models}}{{#model}}defmodule {{moduleName}}.Model.{{classname}} do
  @moduledoc """
  {{description}}
  """

  @derive [Poison.Encoder]
  defstruct [
    {{#vars}}:"{{baseName}}"{{#hasMore}},
    {{/hasMore}}{{/vars}}
  ]

  @type t :: %__MODULE__{
    {{#vars}}:"{{baseName}}" => {{{datatype}}}{{#hasMore}},
    {{/hasMore}}{{/vars}}
  }
end

defimpl Poison.Decoder, for: {{moduleName}}.Model.{{classname}} do
{{#hasComplexVars}}
  def decode(value, _options) do
    value
{{/hasComplexVars}}
{{^hasComplexVars}}
  def decode(value, _options) do
    value
{{/hasComplexVars}}
  end
end
{{/model}}{{/models}}
